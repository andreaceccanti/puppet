# Storm webdav service will run as this user
# Default: storm
STORM_WEBDAV_USER=<%= scope.lookupvar("storm::params::user") %>

# Java VM options
STORM_WEBDAV_JVM_OPTS="<%= scope.lookupvar("storm::storm_webdav::params::jvm_opts") %>"

# HTTPS connector port
# Default: 8443
STORM_WEBDAV_HTTPS_PORT=<%= scope.lookupvar("storm::storm_webdav::params::https_port") %>

# HTTP connector port
# Default: 8085
STORM_WEBDAV_HTTP_PORT=<%= scope.lookupvar("storm::storm_webdav::params::http_port") %>

# Path to the service certificate.
# Default: /etc/grid-security/storm-webdav/hostcert.pem
STORM_WEBDAV_CERTIFICATE_PATH=<%= scope.lookupvar("storm::storm_webdav::params::certificate_path") %>

# Path to the service certificate private key.
# Default: /etc/grid-security/storm-webdav/hostkey.pem
STORM_WEBDAV_PRIVATE_KEY_PATH=<%= scope.lookupvar("storm::storm_webdav::params::private_key_path") %>

# Trust anchors directory
# Default: /etc/grid-security/certificates
STORM_WEBDAV_TRUST_ANCHORS_DIR=<%= scope.lookupvar("storm::storm_webdav::params::trust_anchors_dir") %>

# How often (seconds) trust anchors are refreshed from the trust anchors directory
# Default: 86400 (24 hours)
STORM_WEBDAV_TRUST_ANCHORS_REFRESH_INTERVAL=<%= scope.lookupvar("storm::storm_webdav::params::trust_anchors_refresh_interval") %>

# Max concurrent connections
# Default: 300
STORM_WEBDAV_MAX_CONNECTIONS=<%= scope.lookupvar("storm::storm_webdav::params::max_connections") %>

# Connection queue size
# Default: 900
STORM_WEBDAV_MAX_QUEUE_SIZE=<%= scope.lookupvar("storm::storm_webdav::params::max_queue_size") %>

# Connector Maximum idle time (in milliseconds)
# Default: 30000 (30 seconds)
STORM_WEBDAV_CONNECTOR_MAX_IDLE_TIME=<%= scope.lookupvar("storm::storm_webdav::params::connector_max_idle_time") %>

# Storage area configuration directory
# Default: /etc/storm/webdav/sa.d
STORM_WEBDAV_SA_CONFIG_DIR="<%= scope.lookupvar("storm::storm_webdav::params::sa_config_dir") %>"

# The webdav server jar. Do not change this unless you know what you are doing.
STORM_WEBDAV_JAR=<%= scope.lookupvar("storm::storm_webdav::params::jarfile") %>

# The StoRM webdav logfile. Do not change this unless you know what you are doing.
STORM_WEBDAV_LOG=<%= scope.lookupvar("storm::storm_webdav::params::logfile") %>

# The StoRM wedav logging configuration. Do not change this unless you know what you are doing.
STORM_WEBDAV_LOG_CONFIGURATION=<%= scope.lookupvar("storm::storm_webdav::params::log_configuration") %>

# The StoRM wedav access log configuration. Do not change this unless you know what you are doing.
STORM_WEBDAV_ACCESS_LOG_CONFIGURATION=<%= scope.lookupvar("storm::storm_webdav::params::access_log_configuration") %>

# Enables/disables  support for VO map files
STORM_WEBDAV_VO_MAP_FILES_ENABLE=<%= scope.lookupvar("storm::storm_webdav::params::vo_map_files_enable") %>

# Where StoRM WebDAV should look for voms map files.
STORM_WEBDAV_VO_MAP_FILES_CONFIG_DIR=<%= scope.lookupvar("storm::storm_webdav::params::vo_map_files_config_dir") %>

# VOMS map files refresh period (in seconds)
STORM_WEBDAV_VO_MAP_FILES_REFRESH_INTERVAL=<%= scope.lookupvar("storm::storm_webdav::params::vo_map_files_refresh_interval") %>

# StoRM WebDAV server debug option. Uncomment this (and restart the service)
# if you want to attach a java debugger to the running server process
STORM_WEBDAV_DEBUG=<%= scope.lookupvar("storm::storm_webdav::params::debug_opt") %>

# JVM debug port. Used together with STORM_WEBDAV_DEBUG to specify on which
# port the JVM should listen for incoming debugger. Default: 1044
STORM_WEBDAV_DEBUG_PORT=<%= scope.lookupvar("storm::storm_webdav::params::debug_port") %>

# JVM debug suspend option. Uncomment this to block the process JVM until a remote
# debugger connects to the debugging port specified with the STORM_WEBDAV_DEBUG_PORT
# option
STORM_WEBDAV_DEBUG_SUSPEND=<%= scope.lookupvar("storm::storm_webdav::params::debug_suspend") %>

# The Java VM that will be used to run the storm wedav service.
# Note that the StoRM WebDAV service requires java 7. Default: /usr/lib/jvm/java-1.7.0/bin/java
STORM_WEBDAV_JVM=<%= scope.lookupvar("storm::storm_webdav::params::jvm") %>

